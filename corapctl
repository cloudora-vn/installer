#!/bin/bash

action=$1
target=$2
args=$@

BASE_DIR=directory
ORIGINAL_PORT=port
ORIGINAL_VERSION=version
ORIGINAL_ENTRANCE=entrance
ORIGINAL_USERNAME=username
ORIGINAL_PASSWORD=password
LANGUAGE=en

if [ -f "/usr/local/bin/lang/$LANGUAGE.sh" ]; then
    source "/usr/local/bin/lang/$LANGUAGE.sh"
else
    LANGUAGE=en
fi

function usage() {
    echo "$PANEL_CONTROL_SCRIPT"
    echo
    echo "Usage: "
    echo "  ./corapctl [COMMAND] [ARGS...]"
    echo "  ./corapctl --help"
    echo
    echo "Commands: "
    echo "  status [core|agent]         $TXT_PANEL_SERVICE_STATUS"
    echo "  start [core|agent|all]      $TXT_PANEL_SERVICE_START"
    echo "  stop [core|agent|all]       $TXT_PANEL_SERVICE_STOP"
    echo "  restart [core|agent|all]    $TXT_PANEL_SERVICE_RESTART"
    echo "  uninstall                   $TXT_PANEL_SERVICE_UNINSTALL"
    echo "  user-info                   $TXT_PANEL_SERVICE_USER_INFO"
    echo "  listen-ip                   $TXT_PANEL_SERVICE_LISTEN_IP"
    echo "  version                     $TXT_PANEL_SERVICE_VERSION"
    echo "  update                      $TXT_PANEL_SERVICE_UPDATE"
    echo "  reset                       $TXT_PANEL_SERVICE_RESET"
    echo "  restore                     $TXT_PANEL_SERVICE_RESTORE"
}

function require_core_or_agent() {
    echo -e "$TXT_PANEL_SERVICE_REQUIRE_CORE_OR_AGENT"
    exit 1
}

function require_core_agent_or_all() {
    echo -e "$TXT_PANEL_SERVICE_REQUIRE_CORE_AGENT_OR_ALL"
    exit 1
}

function status() {
    if [ -z "$target" ]; then
        require_core_or_agent
    fi
    case "$target" in
        core|agent)
            systemctl status corapanel-$target.service
            ;;
        *)
            require_core_or_agent
            ;;
    esac
}

function start() {
    if [ -z "$target" ]; then
        require_core_agent_or_all
    fi
    if [ "$target" == "all" ]; then
        systemctl start corapanel-core.service
        systemctl start corapanel-agent.service
    else
        systemctl start corapanel-$target.service
    fi
}

function stop() {
    if [ -z "$target" ]; then
        require_core_agent_or_all
    fi
    if [ "$target" == "all" ]; then
        systemctl stop corapanel-core.service
        systemctl stop corapanel-agent.service
    else
        systemctl stop corapanel-$target.service
    fi
}

function restart() {
    if [ -z "$target" ]; then
        require_core_agent_or_all
    fi
    if [ "$target" == "all" ]; then
        systemctl restart corapanel-core.service
        systemctl restart corapanel-agent.service
    else
        systemctl restart corapanel-$target.service
    fi
}

function uninstall() {
    while true; do
        read -p "$TXT_PANEL_SERVICE_UNINSTALL_NOTICE" yn
        case $yn in
            [Yy] )
                echo -e "$TXT_PANEL_SERVICE_UNINSTALL_START"

                systemctl stop corapanel-core.service
                systemctl stop corapanel-agent.service
                systemctl disable corapanel-core.service >/dev/null 2>&1
                systemctl disable corapanel-agent.service >/dev/null 2>&1

                while true; do
                    read -p "$TXT_PANEL_DATA_KEEP_PROMPT" keep_data
                    case $keep_data in
                        [Yy] )
                            echo "$TXT_PANEL_DATA_DELETE"
                            echo -e "$TXT_PANEL_SERVICE_UNINSTALL_REMOVE"
                            rm -rf $BASE_DIR/corapanel \
                                   /usr/local/bin/{corapctl,corapanel-core,corapanel-agent,lang} \
                                   /usr/bin/{corapctl,corapanel,corapanel-core,corapanel-agent} \
                                   /etc/corapanel \
                                   /etc/systemd/system/{corapanel-core.service,corapanel-agent.service}
                            break
                            ;;
                        [Nn] )
                            echo "$TXT_PANEL_DATA_KEEP"
                            echo -e "$TXT_PANEL_SERVICE_UNINSTALL_REMOVE"
                            rm -rf /usr/local/bin/{corapctl,corapanel-core,corapanel-agent,lang} \
                                   /usr/bin/{corapctl,corapanel,corapanel-core,corapanel-agent} \
                                   /etc/corapanel \
                                   /etc/systemd/system/{corapanel-core.service,corapanel-agent.service}
                            break
                            ;;
                        * )
                            echo "$TXT_INVALID_YN_INPUT"
                            ;;
                    esac
                done

                echo -e "$TXT_PANEL_SERVICE_UNINSTALL_REMOVE_CONFIG"
                systemctl daemon-reload
                systemctl reset-failed
                echo -e "$TXT_PANEL_SERVICE_UNINSTALL_REMOVE_SUCCESS"
                break
                ;;
            [Nn] )
                exit 0
                ;;
            * )
                echo "$TXT_INVALID_YN_INPUT"
                ;;
        esac
    done
}

function user-info() {
    corapanel -l $LANGUAGE user-info
}

function listen-ip() {
    case "${target}" in
        ipv4)
            corapanel -l $LANGUAGE listen-ip ipv4
            target=all
            restart
            ;;
        ipv6)
            corapanel -l $LANGUAGE listen-ip ipv6
            target=all
            restart
            ;;
        *)
            corapanel -l $LANGUAGE listen-ip
            ;;
    esac
}

function restore() {
    while true; do
        read -p "$TXT_PANEL_SERVICE_RESTORE_NOTICE" yn
        case "$yn" in
            [Yy])
                corapanel -l $LANGUAGE restore
                break
                ;;
            [Nn])
                exit 0
                ;;
            *)
                echo -e "$TXT_INVALID_YN_INPUT"
                ;;
        esac
    done
}

function version() {
    corapanel -l $LANGUAGE version
}

function reset() {
    case "${target}" in
        domain)
            corapanel -l $LANGUAGE reset domain
            ;;
        entrance)
            corapanel -l $LANGUAGE reset entrance
            ;;
        https)
            corapanel -l $LANGUAGE reset https
            target=all
            restart
            ;;
        ips)
            corapanel -l $LANGUAGE reset ips
            ;;
        mfa)
            corapanel -l $LANGUAGE reset mfa
            ;;
        *)
            corapanel -l $LANGUAGE reset
            ;;
    esac
}

function update() {
    case "${target}" in
        username)
            corapanel -l $LANGUAGE update username
            ;;
        password)
            corapanel -l $LANGUAGE update password
            ;;
        port)
            corapanel -l $LANGUAGE update port
            ;;
        *)
            corapanel -l $LANGUAGE update
            ;;
    esac
}

function main() {
    case "${action}" in
        status)
            status
            ;;
        start)
            start
            ;;
        stop)
            stop
            ;;
        restart)
            restart
            ;;
        restore)
            restore
            ;;
        uninstall)
            uninstall
            ;;
        user-info)
            user-info
            ;;
        listen-ip)
            listen-ip
            ;;
        version)
            version
            ;;
        reset)
            reset
            ;;
        update)
            update
            ;;
        help)
            usage
            ;;
        --help)
            usage
            ;;
        "")
            usage
            ;;
        *)
            echo "$TXT_PANEL_SERVICE_UNSUPPORTED_PARAMETER"
            ;;
    esac
}

main
